@model LFbrokersV2.Models.Poliza

@{
    ViewData["Title"] = "Edit";
}

<h2>Cotizar Praxis Médica @Html.DisplayFor(Model => Model.ClienteNavigation.Nombres)
@Html.DisplayFor(Model => Model.ClienteNavigation.Apellidos) </h2 > 

<style>
    .headerInfo{
      display: flex;
    }
    .headerInfo div {
      flex: 1; /*grow*/
    }
</style>
<div class="headerInfo">
    <div>
    <text>Especialidades: </text>
        <ul id="Especialidades">
            @foreach (var esp in ViewBag.Especialidades)
            {
                <li>@esp.Nombre</li>
            }
        </ul>
    </div>

    <div>
        <text>Cantidad Cuotas:</text>
        <select id="Cuotas">
          <option value="1">1</option>
          <option value="2">2</option>
          <option value="3">3</option>
          <option value="4">4</option>
          <option value="5">5</option>
          <option value="6">6</option>
          <option value="7">7</option>
          <option value="8">8</option>
          <option value="9">9</option>
          <option value="10">10</option>
          <option value="11">11</option>
          <option value="12">12</option>
        </select> 
    </div>

    <div>
        <text>Impuestos</text>
        <div id="Impuestos">
          @Html.DisplayFor(Model => Model.ClienteNavigation.CodigoPostalNavigation.ZonaNavigation.Impuesto)
        </div>
    </div>
</div>


<div id="example-table"></div>

<link href="~/tabulator/dist/css/semantic-ui/tabulator_semantic-ui.min.css" rel="stylesheet">
<script type="text/javascript" src="~/tabulator/dist/js/tabulator.min.js"></script>

<script>
    var data1 = {
		sumaAsegurada : '500000',
		primaBase: '5000',
		recargaPrima: '0',
		comisionPrima: '5000',
		primaPoliza: '12',
		comisionPrima: '600',
		premioTotal: '5950.00',
		pemioCuota: '991.67',
		condicion: 'Ninguno',
	};
	var data2 = {
		sumaAsegurada : '1000000',
		primaBase: '8000',
		recargaPrima: '5',
		comisionPrima: '8400',
		primaPoliza: '16.19',
		comisionPrima: '1360',
		premioTotal: '996.00',
		pemioCuota: '1666.00',
		condicion: 'Min. Sugerida',
	}

    var table = new Tabulator("#example-table", {
    data: [data1, data2],           //load row data from array
	layout:"fitColumns",      //fit columns to width of table
	responsiveLayout:"hide",  //hide columns that dont fit on the table
	tooltips:true,            //show tool tips on cells
	addRowPos:"top",          //when adding a new row, add it to the top of the table
	movableColumns:true,      //allow column order to be changed
	resizableRows:true,       //allow row order to be changed
	//initialSort:[             //set the initial sort order of the data
	//	{column:"name", dir:"asc"},
	//],
	columns:[                 //define the table columns
		{formatter:"rowSelection", titleFormatter:"rowSelection", align:"center", headerSort:false, cellClick:function(e, cell){
	        cell.getRow().toggleSelect();
	     }},
		{title:"Suma asegurada", field:"sumaAsegurada", formatter:"money", formatterParams:{ decimal:".", thousand:",", symbol:"$", symbolAfter:"p", precision:false}},
		{title:"Prima base", field:"primaBase", formatter:"money", formatterParams:{ decimal:".", thousand:",", symbol:"$", symbolAfter:"p", precision:false}},

		{title:"Recarga Prima %", field:"recargaPrima", editor:"input", editor:true, formatter:"money", formatterParams:{ decimal:".", thousand:",", symbol:"%", symbolAfter:"p", precision:false}
		  
		},

		{title:"Comision prima", field:"comisionPrima", formatter:"money", formatterParams:{ decimal:".", thousand:",", symbol:"$", symbolAfter:"p", precision:false}},
		{title:"Prima poliza", field:"primaPoliza"},
		{title:"Comision prima", field:"comisionPrima"},
		{title:"Premio total", field:"premioTotal", formatter:"money", formatterParams:{ decimal:".", thousand:",", symbol:"$", symbolAfter:"p", precision:false}},
		{title:"Premio cuota", field:"pemioCuota", formatter:"money", formatterParams:{ decimal:".", thousand:",", symbol:"$", symbolAfter:"p", precision:false}},

		{title:"Condicion", field:"condicion", width:95, editor:"select", editorParams:{values:["Ninguno", "Min. Sugerida", "Sugerida", "Ideal"]}

		},
	],
});

</script>



<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver a Listado de Polizas a Cotizas</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
